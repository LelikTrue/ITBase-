"""Refactor models to SQLAlchemy 2.0 style

Revision ID: 4631d721d198
Revises: ae316e4eff6d
Create Date: 2025-09-18 18:07:21.414903

"""
from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '4631d721d198'
down_revision: str | None = 'ae316e4eff6d'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actionlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_actionlog_id'), 'actionlog', ['id'], unique=False)
    op.drop_index('ix_ActionLog_id', table_name='ActionLog')
    op.drop_table('ActionLog')
    op.add_column('locations', sa.Column('description', sa.String(length=500), nullable=True))
    op.alter_column('network_settings', 'is_online',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('network_settings', 'is_tagged',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('network_settings', 'is_tagged',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('network_settings', 'is_online',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('locations', 'description')
    op.create_table('ActionLog',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ActionLog_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ActionLog_pkey')
    )
    op.create_index('ix_ActionLog_id', 'ActionLog', ['id'], unique=False)
    op.drop_index(op.f('ix_actionlog_id'), table_name='actionlog')
    op.drop_table('actionlog')
    # ### end Alembic commands ###
