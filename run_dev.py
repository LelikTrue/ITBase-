#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
"""
import os
import sys
import subprocess
import argparse
from pathlib import Path

try:
    from dotenv import load_dotenv
    print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    load_dotenv()
except ImportError:
    print("‚ö†Ô∏è  Warning: `python-dotenv` –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –Ω–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    print(f"üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {description}...")
    try:
        subprocess.run([sys.executable, "-m"] + command, check=True)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {description}.")
        return True
    except (FileNotFoundError, subprocess.CalledProcessError):
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: {description}.")
        return False

def start_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Uvicorn —á–µ—Ä–µ–∑ subprocess –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏."""
    host = os.getenv("HOST", "0.0.0.0")
    port = os.getenv("APP_PORT", "8000")
    app_location = "app.main:app"

    display_host = "localhost" if host == "0.0.0.0" else host

    print("\n" + "="*50)
    print("ü¶Ñ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Uvicorn...")
    print(f"   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://{display_host}:{port}")
    print(f"   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://{display_host}:{port}/docs")
    print("   - –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("="*50 + "\n")

    try:
        # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ uvicorn –∏ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å
        # (–¥–ª—è --reload) –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º python.exe –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ venv.
        subprocess.run([
            sys.executable, "-m", "uvicorn",
            app_location,
            "--reload",
            "--host", host,
            "--port", port,
            "--log-level", "info"
        ], check=True)

    except KeyboardInterrupt:
        print("\n[!] –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    except subprocess.CalledProcessError:
        print("\n[!] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞.")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è."""
    parser = argparse.ArgumentParser(description="–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ ITBase –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.")
    parser.add_argument("--install", action="store_true", help="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    parser.add_argument("--migrate", action="store_true", help="–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    args = parser.parse_args()

    if args.install:
        if not run_command(["pip", "install", "-r", "requirements/dev.txt"], "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"):
            sys.exit(1)

    if args.migrate:
        if not run_command(["alembic", "upgrade", "head"], "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"):
            sys.exit(1)

    start_server()

if __name__ == "__main__":
    main()