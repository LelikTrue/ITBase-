# docker-compose.yml
# Базовый файл конфигурации Docker Compose для ITBase
# Для разработки используйте docker-compose.dev.yml
# Для продакшена используйте docker-compose.prod.yml

---

# Общие переменные окружения (можно переопределить в .env)
x-python-env: &python-env
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1
  TZ: "Europe/Moscow"

services:
  # Сервис базы данных PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: itbase-db
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-itbase}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - itbase-network
    logging: &logging
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # Сервис бэкенд-приложения (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_MODE=${APP_MODE:-dev}
    container_name: itbase-backend
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:8000"
    env_file: .env
    environment:
      <<: *python-env
      POSTGRES_HOST: db
      REDIS_HOST: redis
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - itbase-network
    logging: *logging

# Определение томов для постоянного хранения данных
volumes:
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME:-itbase}_postgres_data

# Определение пользовательской сети для сервисов
networks:
  itbase-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-itbase}_network