version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: builder
      args:
        - USER_ID=1000
        - GROUP_ID=1000
    image: itbase-app:ci-${CI_PIPELINE_ID:-latest}
    container_name: itbase-app
    restart: unless-stopped
    env_file: .env
    environment:
      - APP_MODE=ci
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONFAULTHANDLER=1
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./static:/app/static
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    networks:
      - itbase-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:15-alpine
    container_name: itbase-db
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - itbase-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: itbase-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - itbase-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  itbase-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
