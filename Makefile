# ===================================================================
# ITBase: –ì–ª–∞–≤–Ω—ã–π Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker-–æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
# ===================================================================

.PHONY: help up down logs migrate migration shell lint format test

# --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º docker-compose.dev.yml –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
COMPOSE_FILE := -f docker-compose.dev.yml
# –ò–º—è —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ docker-compose —Ñ–∞–π–ª–∞
APP_SERVICE_NAME := app

# --- –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ ---
GREEN  := $(shell tput -Txterm setaf 2)
YELLOW := $(shell tput -Txterm setaf 3)
WHITE  := $(shell tput -Txterm setaf 7)
RESET  := $(shell tput -Txterm sgr0)

## help: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
help:
	@echo ""
	@echo "${YELLOW}ITBase: –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏${RESET}"
	@echo ""
	@echo "Usage: make ${GREEN}<–∫–æ–º–∞–Ω–¥–∞>${RESET}"
	@echo ""
	@echo "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@awk '/^[a-zA-Z\.\-]+:/ { \
		helpMessage = match(lastLine, /^## (.*)/); \
		if (helpMessage) { \
			helpCommand = substr($$1, 0, index($$1, ":")-1); \
			helpMessage = substr(lastLine, RSTART + 3, RLENGTH); \
			printf "  ${GREEN}%-12s${RESET} %s\n", helpCommand, helpMessage; \
		} \
	} \
	{ lastLine = $$0 }' $(MAKEFILE_LIST) | sort
	@echo ""

# --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º ---

## up: –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
up: check-env
	@echo "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${RESET}"
	docker compose $(COMPOSE_FILE) up --build -d

## down: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
down:
	@echo "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${RESET}"
	docker compose $(COMPOSE_FILE) down

## logs: –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)
logs:
	@echo "${YELLOW}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${RESET}"
	docker compose $(COMPOSE_FILE) logs -f $(APP_SERVICE_NAME)

# --- –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö ---

## migrate: –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
migrate:
	@echo "${YELLOW}üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∫ –ë–î...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) alembic upgrade head

## migration: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic
migration:
	@read -p "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'add_user_model'): ${RESET}" MSG; \
	echo "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏...${RESET}"; \
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) alembic revision --autogenerate -m "$$MSG"

## seed-devices: –ù–∞–ø–æ–ª–Ω–∏—Ç—å –ë–î –¥–µ–º–æ-–∞–∫—Ç–∏–≤–∞–º–∏ (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏)
seed-devices:
	@echo "${YELLOW}üå± –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–µ–º–æ-–∞–∫—Ç–∏–≤–∞–º–∏...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) python seed_devices.py

# --- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ---

## shell: –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é (bash) –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
shell:
	@echo "${YELLOW}üíª –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) bash

## lint: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∏–ª—å –∫–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
lint:
	@echo "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ (linting)...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) flake8 .
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) black --check .
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) isort --check-only .

## format: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
format:
	@echo "${YELLOW}‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) black .
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) isort .

## test: –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã (pytest) –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
test:
	@echo "${YELLOW}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...${RESET}"
	docker compose $(COMPOSE_FILE) exec $(APP_SERVICE_NAME) pytest

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã ---

# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –µ–≥–æ –∏–∑ .env.example, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
check-env:
	@if [ ! -f .env ]; then \
		echo "${YELLOW}–í–Ω–∏–º–∞–Ω–∏–µ: .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –∏–∑ .env.example...${RESET}"; \
		cp .env.example . .env; \
	fi

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
default: help