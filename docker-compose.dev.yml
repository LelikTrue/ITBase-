# docker-compose.dev.yml
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: itbase-backend-dev
    restart: unless-stopped
    env_file: .env
    environment: 
      POSTGRES_HOST: db
      REDIS_HOST: redis
    ports: 
      - "${APP_PORT:-8002}:8000" 
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - itbase-network

  db:
    image: postgres:15-alpine
    container_name: itbase-db
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-itbase}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - itbase-network

  redis:
    image: redis:7-alpine
    container_name: itbase-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$${REDIS_PASSWORD:-changeme}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - itbase-network

networks:
  itbase-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: